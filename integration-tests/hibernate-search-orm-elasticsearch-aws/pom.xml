<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <groupId>io.quarkiverse.hibernatesearchextras</groupId>
        <artifactId>quarkus-hibernate-search-extras-integration-tests-parent</artifactId>
        <version>999-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>quarkus-integration-test-hibernate-search-orm-elasticsearch-aws</artifactId>
    <name>Quarkus - Hibernate Search Extras - Integration Tests - ORM + Elasticsearch - AWS Integration</name>

    <properties>
        <elasticsearch.hosts>localhost:9200</elasticsearch.hosts>
        <elasticsearch.protocol>http</elasticsearch.protocol>
    </properties>

    <dependencies>
        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-resteasy</artifactId>
        </dependency>
        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-hibernate-search-orm-elasticsearch</artifactId>
        </dependency>
        <dependency>
            <groupId>io.quarkiverse.hibernatesearchextras</groupId>
            <artifactId>quarkus-hibernate-search-orm-elasticsearch-aws</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-jdbc-h2</artifactId>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <scope>compile</scope>
        </dependency>

        <!-- test dependencies -->
        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-junit5</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-test-h2</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.rest-assured</groupId>
            <artifactId>rest-assured</artifactId>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.apache.commons</groupId>
                    <artifactId>commons-lang3</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>com.github.tomakehurst</groupId>
            <artifactId>wiremock</artifactId>
            <scope>test</scope>
        </dependency>
        <!-- Necessary for Wiremock for some reason -->
        <dependency>
            <groupId>jakarta.servlet</groupId>
            <artifactId>jakarta.servlet-api</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>
        <plugins>
            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <systemProperties>
                        <elasticsearch.hosts>${elasticsearch.hosts}</elasticsearch.hosts>
                        <elasticsearch.protocol>${elasticsearch.protocol}</elasticsearch.protocol>
                    </systemProperties>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-failsafe-plugin</artifactId>
                <configuration>
                    <systemProperties>
                        <elasticsearch.hosts>${elasticsearch.hosts}</elasticsearch.hosts>
                        <elasticsearch.protocol>${elasticsearch.protocol}</elasticsearch.protocol>
                    </systemProperties>
                </configuration>
            </plugin>
            <plugin>
                <groupId>io.quarkus</groupId>
                <artifactId>quarkus-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>build</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>0.46.0</version>
                <configuration>
                    <images>
                        <image>
                            <name>${elasticsearch.image}</name>
                            <alias>elasticsearch</alias>
                            <run>
                                <env>
                                    <discovery.type>single-node</discovery.type>
                                    <xpack.security.enabled>false</xpack.security.enabled>
                                    <ES_JAVA_OPTS>-Xms512m -Xmx512m</ES_JAVA_OPTS>
                                    <!-- Disable disk-based shard allocation thresholds:
                                         in a single-node setup they just don't make sense,
                                         and lead to problems on large disks with little space left.
                                         See https://www.elastic.co/guide/en/elasticsearch/reference/8.8/modules-cluster.html#disk-based-shard-allocation
                                     -->
                                    <cluster.routing.allocation.disk.threshold_enabled>false</cluster.routing.allocation.disk.threshold_enabled>
                                    <!-- Disable some features that are not needed in our tests and just slow down startup -->
                                    <xpack.profiling.enabled>false</xpack.profiling.enabled>
                                    <xpack.monitoring.templates.enabled>false</xpack.monitoring.templates.enabled>
                                    <xpack.ml.enabled>false</xpack.ml.enabled>
                                    <xpack.watcher.enabled>false</xpack.watcher.enabled>
                                    <xpack.ent_search.enabled>false</xpack.ent_search.enabled>
                                    <stack.templates.enabled>false</stack.templates.enabled>
                                    <cluster.deprecation_indexing.enabled>false</cluster.deprecation_indexing.enabled>
                                    <indices.lifecycle.history_index_enabled>false</indices.lifecycle.history_index_enabled>
                                    <slm.history_index_enabled>false</slm.history_index_enabled>
                                </env>
                                <ports>
                                    <port>9200:9200</port>
                                </ports>
                                <log>
                                    <prefix>Elasticsearch: </prefix>
                                    <date>default</date>
                                    <color>cyan</color>
                                </log>
                                <wait>
                                    <http>
                                        <url>http://localhost:9200</url>
                                        <method>GET</method>
                                        <status>200</status>
                                    </http>
                                    <time>30000</time>
                                </wait>
                            </run>
                        </image>
                    </images>
                    <allContainers>true</allContainers>
                </configuration>
                <executions>
                    <execution>
                        <id>docker-start</id>
                        <phase>process-test-classes</phase>
                        <goals>
                            <goal>stop</goal>
                            <goal>start</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>docker-stop</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>stop</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>
